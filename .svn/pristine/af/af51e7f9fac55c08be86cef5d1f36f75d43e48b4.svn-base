<%@ page language="java" contentType="text/html; charset=UTF-8"
pageEncoding="UTF-8"%>
<script src="${pageContext.request.contextPath}/common/sw/js/PmsProjectJs.js"></script>
<script src="${pageContext.request.contextPath}/common/sw/js/CommonCode.js"></script>

<style>
  /* 헤더 텍스트 가운데 정렬 */
  .centered {
    .ag-header-cell-label {
      justify-content: center !important;
    }
  }
  /* 그리드 헤더 색상 */
  .ag-theme-alpine {
    -ag-header-background-color: black;
  }

  /* 그리드 내용 가운데 정렬 */
  .ag-row .ag-cell {
    display: flex;
    justify-content: center;
    /* align horizontal */
    align-items: center;
    /* align-content: center; */
  }

  .ag-header-cell-text {
    margin-left: 40px;
  }

   .task {
    background-color: #f4f2f2;
  }
  .taskCn {
    background-color: #f4f2f2;
  }

  .msubBtn {
    background-color: #56726a;
    color: white;
  }

	.searchFilter{
	background-color: #f4f2f2;
	}

.controllProgress {
  display: flex;
  align-items: center;
}

.controllInput {
  flex: 1;
}

#progressPer {
  margin-left: 10px;
}

.textline {
	border: 1px solid #e5e5e5;
}
</style>

<link
  rel="stylesheet"
  href="${pageContext.request.contextPath}/common/sw/css/PmsProjectCss.css"
/>



<div id="wrapper">
  <div class="mb-3">
      <button type="button" id="insertTaskBtn" class="btn bg msubBtn">
        일감 추가 <i class="icofont-plus-circle me-2 fs-6"></i>
      </button>
    </div>
  </div>
  <div class="row mb-3">
   	<div class="col-12">
   	<input type="text" class="form-control" oninput="onQuickFilterChanged()" id="searchFilter" placeholder="검색" />
  		<div id="myGrid" style="height: 500px; width: 100%" class="ag-theme-alpine"></div>
  	</div>
  </div>
</div>

<!--모달-->
<div
  class="modal fade"
  id="taskModal"
  role="dialog"
  aria-labelledby="taskModal"
  aria-hidden="true"
>
  <div class="modal-dialog d-flex justify-content-center" role="document">
    <div class="modal-content" id="taskModalBody"></div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/ag-grid-community/dist/ag-grid-community.min.js"></script>
<script>
  var projNo = "a005";

  //서버에서 발행된 헤더네임과 토큰갑사 저장
  var header = "${_csrf.headerName}";
  var token = "${_csrf.token}";

  //바닐라 자바스크립트 사용시 AJAX send 전에 헤더값 세팅 필요
  //xhr.setRequestHeader(header, token);

  function onQuickFilterChanged() {
    gridOptions.api.setQuickFilter(document.querySelector('#searchFilter').value);
	}

  const columnDefs = [
    {
      field: "taskTitle",
      headerName: "업무명",
      maxWidth: 150,
    },
    {
      field: "taskStts",
      headerName: "상태",
      cellStyle: { textAlign: "center" },
      maxWidth: 150,
    },
    {
      field: "taskPriority",
      headerName: "우선순위",
      cellStyle: { textAlign: "center" },
      maxWidth: 150,
    },
    {
      field: "taskBengDt",
      headerName: "시작일",
      cellStyle: { textAlign: "center" },
      maxWidth: 150,
    },
    {
      field: "taskDdlnDt",
      headerName: "마감일",
      cellStyle: { textAlign: "center" },
      maxWidth: 150,
    },
    {
      field: "taskSttr",
      headerName: "전척도",
      cellStyle: { textAlign: "center" },
      maxWidth: 150,
    },
    {
      field: "userNms",
      headerName: "담당자",
      cellStyle: { textAlign: "center" },
      maxWidth: 160,
    },
  ];

  const rowData = [];

  function getData(projNo) {
    $.ajax({
      url: "/pms/project/taskListOut?${_csrf.parameterName}=${_csrf.token}",
      data: {
        projNo: projNo,
      },
      type: "POST",
      dataType: "json",
      success: function (res) {
        console.log("넘어온 데이터", res);

        for(let i=0; i<res.length; i++){
            res[i].taskSttr = res[i].taskSttr+'%';
        }

        const updatedRes = res.map((data) => {
          const userNms = data.asgList.map((item) => item.userNm);
          return { ...data, userNms };
        });

        gridOptions.api.setRowData(updatedRes);
      },
      error: function (xhr, status, error) {
        console.error(error);
      },
    });
  }

  const gridOptions = {
  	defaultColDef: {
	    enableRowGroup: true,
	    enablePivot: true,
	    enableValue: true,
	    sortable: true,
	    resizable: true,
	    filter: true,
	    minWidth: 100,
	},
	suppressRowClickSelection: true,
	groupSelectsChildren: true,
    columnDefs: columnDefs,
    rowData: rowData,
    rowSelection: "multiple",
    rowGroupPanelShow: 'always',
    pivotPanelShow: 'always',
    animateRows: true,
    pagination: true,
    paginationPageSize: 10,
    onCellClicked: (params) => {
      console.log("등록한 데이터 tr", params);

      detailTask(params.data.taskNo);
    },
  };

  document.addEventListener("DOMContentLoaded", () => {
    const gridDiv = document.querySelector("#myGrid");
    new agGrid.Grid(gridDiv, gridOptions);
    getData(projNo);
  });

  // 삭제버튼
  document.addEventListener("click", function (event) {
    if (event.target.id === "deleteTaskBtn") {
      const taskNo = document.getElementById("taskDetailtaskNo").innerText;
      deleteTask(taskNo, header, token);
    }
  });

  // 수정 저장 버튼
  document.addEventListener("click", function (event) {
    if (event.target.id === "updateSaveBtn") {
      const taskNo = document.getElementById("taskUpdatetaskNo").innerText;
      console.log("updateSaveTask : " + taskNo);
      updateTaskSave(taskNo, header, token);
    }
  });

  // 일감 저장 버튼
  document.addEventListener("click", function (event) {
    if (event.target.id === "insertSaveBtn") {
      insertTaskSave(projNo, header, token);
    }
  });
</script>
