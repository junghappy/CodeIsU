package team.tttt.pms.project.dashBoard.web;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import lombok.extern.slf4j.Slf4j;
import team.tttt.pms.project.dashBoard.service.PmsDashBoardService;
import team.tttt.pms.project.vo.IssueVO;
import team.tttt.pms.project.vo.MemManagementVO;
import team.tttt.pms.project.vo.ProjVO;
import team.tttt.pms.project.vo.ProjectMemberSttrVO;
import team.tttt.pms.project.vo.TaskVO;

@Controller
@RequestMapping("/pms/project")
@Slf4j
public class PmsDashBoardController {

	@Inject
	PmsDashBoardService service;

	@RequestMapping("/dashBoard")
	public String list(String projectNo, Model model) {
		model.addAttribute("projNo",projectNo);
		return "pms/com/pmsDashBoard";
	}


	// 프로젝트 멤버 추출
    @ResponseBody
    @GetMapping(value="/projectInfo", produces = "application/json;charset=utf-8")
    public ProjVO getProject (String projNo) {

       log.info("------------- projectInfo 실행 "+ projNo);

       ProjVO vo = service.getProject(projNo);

        return vo;
    }

    // 프로젝트 일감 추출
    @ResponseBody
    @GetMapping(value="/ProjectTaskInfo", produces = "application/json;charset=utf-8")
    public List<TaskVO> getTask (String projNo) {

       log.info("------------- ProjectTaskInfo 실행 "+ projNo);

       List<TaskVO> vo = service.getTask(projNo);

        return vo;
    }

    // 프로젝트 팀원 조회
    @ResponseBody
    @GetMapping(value="/ProjectMemberInfo", produces = "application/json;charset=utf-8")
    public List<MemManagementVO> ProjectMemberInfo (String projNo) {

    	log.info("------------- ProjectMemberInfo 실행 "+ projNo);

    	List<MemManagementVO> vo = service.memList(projNo);

    	return vo;
    }

    // 프로젝트 팀원 진척도 조회
    @ResponseBody
    @GetMapping(value="/proMemProgress", produces = "application/json;charset=utf-8")
    public List<ProjectMemberSttrVO> proMemProgress (String projNo) {

    	log.info("------------- proMemProgress 실행 "+ projNo);

    	List<ProjectMemberSttrVO> vo = service.proMemProgress(projNo);

    	return vo;
    }


    // 프로젝트 팀원 진척도 조회
    @ResponseBody
    @GetMapping(value="/getIssue", produces = "application/json;charset=utf-8")
    public List<IssueVO> getIssue (String projNo) {

    	log.info("------------- getIssue 실행 "+ projNo);

    	List<IssueVO> vo = service.getIssue(projNo);

    	return vo;
    }

    //



}
