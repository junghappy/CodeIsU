package team.tttt.pms.stu.classroom.web;


import java.util.List;

import javax.inject.Inject;

import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import lombok.extern.slf4j.Slf4j;
import team.tttt.pms.common.enums.ServiceResult;
import team.tttt.pms.common.vo.CustomUser;
import team.tttt.pms.common.vo.UserVO;
import team.tttt.pms.stu.classroom.service.StuQstnService;
import team.tttt.pms.stu.vo.AttdanVO;
import team.tttt.pms.stu.vo.QstnVO;


@Slf4j
@Controller
@RequestMapping("/stu/classroom")
public class StuQstnController {

    @Inject
    private StuQstnService qstnService;

    @GetMapping(value = "/qstn")
    public String qstn(Model model, @RequestParam("sbjctCd") String sbjctCd) {
        model.addAttribute("sbjctCd", sbjctCd);
        log.info("qstn 메인 컨트롤러");
    	return "stu/com/classroom/qstnList";
    }

    @ResponseBody
    @GetMapping(value = "/qstnList", produces = "application/json;charset=utf-8")
    public List<QstnVO> qstnList(Model model, String sbjctCd, Authentication auth) {
    	CustomUser mVO = (CustomUser) auth.getPrincipal();
		UserVO userVO = mVO.getMember();
		QstnVO qstnVO = new QstnVO();
		qstnVO.setStuNo(userVO.getUserNo());
		qstnVO.setSbjctCd(sbjctCd);
		log.info("sbjctCd"+sbjctCd);
    	List<QstnVO> qstnList = qstnService.selectQstnList(qstnVO);
    	log.info("리스트 출력 컨트롤러");
    	log.info("qstnList"+qstnList);
    	return qstnList;
    }


    @PostMapping(value = "/qstn")
    public String qstInsert(
    		QstnVO qstnVO,
    		RedirectAttributes ra,
    		Authentication auth) {
    	CustomUser mVO = (CustomUser) auth.getPrincipal();
		UserVO userVO = mVO.getMember();
    	qstnVO.setStuNo(userVO.getUserNo());
        ServiceResult result = qstnService.insertQstn(qstnVO);
        ra.addFlashAttribute("result", result);
        log.info("ㅎㅎ");
        return "redirect:/stu/classroom/qstn";
    }
}
