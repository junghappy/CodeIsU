<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<style>
    .form-check-input{
        margin-top: 0.6em;
    }

</style>
<div class="container">
    <input type="hidden" name="asmtNo" id="asmtNo" value="${asmtNo}">
    <div>
        <input type="datetime-local" id="asmtDdln" class="form-control" value="2008-05-13T22:33:00">
    </div>
    <div>
        <input type="text" id="asmtTtl" name="example-input-large" class="form-control form-control-lg font-weight-bold" placeholder="Large" maxlength="100">
        <textarea id="asmtExpln" class="form-control font-weight-light" placeholder="Light Text"></textarea>
    </div>
    <!-- 문제 card -->
    <div id="asmtContainer">
    </div>
    <div class="d-grid gap-2">
        <button class="btn btn-outline-primary" type="button" id="plusBtn"><i data-feather="plus" class="feather-icon"></i></button>
        <button class="btn btn-primary" type="button" id="submitBtn">완료</button>
    </div>

</div>

<script>
    var sbjctCd = "";
    var asmtNo = document.querySelector("#asmtNo").value;
    console.log(asmtNo);
    feather.replace();
    // 오늘 날짜 
    var currentDate = new Date(); // 현재 날짜와 시간 가져오기
    var year = currentDate.getFullYear(); //년
    var month = currentDate.getMonth() + 1; // 월
    var date = currentDate.getDate(); // 일
    var hours = currentDate.getHours(); // 시
    var minutes = currentDate.getMinutes(); // 분

    // 한 자리 수인 경우 앞에 0을 붙여 두 자리로 만들기
    var formattedMonth = month < 10 ? "0" + month : month;
    var formattedDate = date < 10 ? "0" + date : date;
    var formattedHours = hours < 10 ? "0" + hours : hours;
    var formattedMinutes = minutes < 10 ? "0" + minutes : minutes;
    var currDt = year + "-" + formattedMonth + "-" + formattedDate + " " + formattedHours + ":" + formattedMinutes; // 오늘날짜 + 시간


    // 카드 컨테이너(카드가 추가될 div)
    var asmtContainer = document.querySelector("#asmtContainer");
    var imgiconNum = 0;

    // 이미지 미리보기
    function readURL(input) {
        // 부모 요소 내에서 .asmttitleimg를 선택
        var parent = input.closest('.asmt');
        var asmttitleimg = parent.querySelector('.asmttitleimg');

        asmttitleimg.innerHTML = "";

        // 선택한 파일이 존재하고 파일의 길이가 0보다 크다면
        if (input.files && input.files.length > 0) {
            // Array.from(): 배열로 변환
            // input.files : 선택한 파일 목록
            Array.from(input.files).forEach(function (file) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    var imgElement = document.createElement("img");
                    imgElement.src = e.target.result;
                    imgElement.style.width = "100%"; // 이미지를 카드의 가로 너비에 맞게 조정
                    imgElement.style.height = "auto"; // 이미지의 세로 높이를 자동으로 조정
                    asmttitleimg.appendChild(imgElement);
                    console.log("f", imgElement);
                };
                reader.readAsDataURL(file);
            });
        }
    }

    // 객관식/주관식에 따른 문제폼 생성
    // 처음 화면
    asmtVo()
    function asmtVo() {
        data = {
            "asmtNo" : asmtNo
        }
        $.ajax({
            url: '/tch/class/asmt/updateForm',
            method: 'post',
            data: JSON.stringify(data),
            dataType: 'json',
            contentType:'application/json; charset=UTF-8',
            beforeSend: function(xhr) {
                xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
            },
            success: function(res) {
                console.log("결과",res);
                // 과목 코드 입력
                sbjctCd = res,sbjctCd;
                // 마감기한, 제목, 설명 넣기
                
                console.log("file 길이" ,res.qstList[0].fileList.length);
                document.querySelector("#asmtTtl").value = res.asmtTtl;
                document.querySelector("#asmtExpln").innerHTML = res.asmtExpln;
                document.querySelector("#asmtDdln").value = res.asmtDdln;

                // 내용 넣기
                var qstList = res.qstList;
                console.log("qstList",qstList);
                console.log("qstList 길이 : "+ qstList.length);
                var updateStr = "";
                for(let i=0; i<qstList.length; i++){
                    var qst = res.qstList[i];
                    console.log("qst",qst);
                    console.log("qstCode" + qst.qstCode);
                    updateStr += `<div class="card qstCard">`;
                    updateStr += `    <div class="card-body collapse show">`;
                    if(qst.qstCode == "M"){
                        console.log("qstCode" + i + " : " + qst.qstCode)
                        // 객관식이라면
                        updateStr += `        <div class="row mb-4">`;
                        updateStr += `            <div class="col-2">`;
                        updateStr += `                <select class="form-select mr-sm-2 qstCode">`;
                        updateStr += `                    <option selected value="M">객관식</option>`;
                        updateStr += `                    <option value="S">주관식</option>`;
                        updateStr += `                </select>`;
                        updateStr += `            </div>`;
                        updateStr += `            <div class="col-8"></div>`;
                        updateStr += `            <div class="col-2 text-end">`;
                        updateStr += `                <i data-feather="copy" class="feather-icon copyBtn"></i>`;
                        updateStr += `                &nbsp;&nbsp;`;
                        updateStr += `                <i data-feather="trash-2" class="feather-icon deleteBtn"></i>`;
                        updateStr += `            </div>`;
                        updateStr += `        </div>`;
                        updateStr += `        <div class="asmt">`;
                        updateStr += `            <div class="row mb-3 qstTitle">`;
                        updateStr += '                <div class="col-10"><input type="text" class="form-control font-weight-normal qstCn" placeholder="문제" value =' + qst.qstCn +'></div>';
                        updateStr += `                <div class="col-2 text-end">`;
                        updateStr += `                    <label for="imgicon\${imgiconNum}"><i data-feather="image" class="feather-icon"></i></label>`;
                        updateStr += `                    <input type="file"a class="file-upload" multiple id="imgicon\${imgiconNum}" style = "display : none" onchange="readURL(this);" >`;
                        updateStr += `                </div>`;
                        updateStr += `            </div>`;
                        updateStr += `            <div class="asmttitleimg mb-3">`;
                        
                        if(qst.fileList != null && qst.fileList.length > 0){
                            console.log("file 길이" ,qst.fileList);
                            for(let f=0; f<qst.fileList.length; f++){
                                console.log("파일 있는지 체킁", qst.fileList[f]);
                                console.log("파일 길이 체킁", qst.fileList.length);
                                let myfile = qst.fileList[f];
                                console.log("file" ,myfile.filePath);
                                updateStr += '            <img src="' + myfile.filePath + '" style = "width:100%; height: auto;"/>'

                            }
                        }
                        updateStr += `            </div>`;
                        updateStr += `        </div>`;
                        updateStr += `        <div class="asmtcardDtl">`;
                        let qstAns = qst.qstAns;
                        for(let j=0; j<qst.qstDtlList.length; j++){
                            let qstDtl = qst.qstDtlList[j];
                            updateStr += `            <div class="form-check mb-2">`;
                            if(qstDtl.qstDtlNo == qstAns){
                                updateStr += '                <input class="form-check-input" type="radio" name="qstDtlOptions\${imgiconNum}" value="' + qstDtl.qstDtlNo + '" checked>';
                            } else {
                                updateStr += '                <input class="form-check-input" type="radio" name="qstDtlOptions\${imgiconNum}" value="' + qstDtl.qstDtlNo + '">';

                            }
                            updateStr += '                <input type="text" class="form-control font-weight-normal qstDtlCn" placeholder="답" value ="'+ qstDtl.qstDtlCn + '">';
                            updateStr += `            </div>`;
                        }
                        updateStr += `        </div>`;

                    } else{
                        // 주관식이라면
                        updateStr += `        <div class="row mb-4">`;
                        updateStr += `            <div class="col-2">`;
                        updateStr += `                <select class="form-select mr-sm-2 qstCode">`;
                        updateStr += `                    <option value="M">객관식</option>`;
                        updateStr += `                    <option selected value="S">주관식</option>`;
                        updateStr += `                </select>`;
                        updateStr += `            </div>`;
                        updateStr += `            <div class="col-8"></div>`;
                        updateStr += `            <div class="col-2 text-end">`;
                        updateStr += `                <i data-feather="copy" class="feather-icon copyBtn"></i>`;
                        updateStr += `                &nbsp;&nbsp;`;
                        updateStr += `                <i data-feather="trash-2" class="feather-icon deleteBtn"></i>`;
                        updateStr += `            </div>`;
                        updateStr += `        </div>`;
                        updateStr += `        <div class="asmt">`;
                        updateStr += `            <div class="row mb-3 qstTitle">`;
                        updateStr += '                <div class="col-10"><input type="text" class="form-control font-weight-normal qstCn" value =' + qst.qstCn + ' placeholder="문제"></div>';
                        updateStr += `                <div class="col-2 text-end">`;
                        updateStr += `                    <label for="imgicon\${imgiconNum}"><i data-feather="image" class="feather-icon"></i></label>`;
                        updateStr += `                    <input type="file"a class="file-upload" multiple id="imgicon\${imgiconNum}" style = "display : none" onchange="readURL(this);" >`;
                        updateStr += `                </div>`;
                        updateStr += `            </div>`;
                        updateStr += `            <div class="asmttitleimg mb-3">`;
                        if(qst.fileList != null && qst.fileList.length > 0){
                            console.log("file 길이" ,qst.fileList);
                            for(let f=0; f<qst.fileList.length; f++){
                                console.log("파일 있는지 체킁", qst.fileList[f]);
                                console.log("파일 길이 체킁", qst.fileList.length);
                                let myfile = qst.fileList[f];
                                console.log("file" ,myfile.filePath);
                                updateStr += '            <img src="' + myfile.filePath + '" style = "width:100%; height: auto;"/>'

                            }
                        }
                        updateStr += `            </div>`;
                        updateStr += `        </div>`;
                        updateStr += `        <div class="asmtcardDtl">`;
                        updateStr += `           <div class="row align-items-center">`;
                        updateStr += `               <div class="col-1">답</div>`;
                        console.log("qstAns: " + qst.qstAns);
                        updateStr += '               <div class="col-9"><input type="text" class="form-control font-weight-normal border-0 rounded-0 shadow-none border-bottom border-dark qstnAns" placeholder="답" value="' + qst.qstAns + '" ></div>';
                        updateStr += `               <div class="col-2"></div>`;
                        updateStr += `           </div>`;
                        updateStr += `        </div>`;
                    }
                    updateStr += `    </div>`;
                    updateStr += `</div>`;
                }
                // 작성한 문제 리스트 추가
                //console.log("updateStr",updateStr);
                document.querySelector("#asmtContainer").innerHTML = updateStr;

            },
            error: function(xhr, status, error) {
                // 요청이 실패했을 때 처리할 코드 작성
                alert("제발");
            }
        });
    }

    
    $(document).on("change", ".qstCode", function(e) {
        var qstCodeValue = this.value;
        var cardBody = this.closest(".card-body"); // 상위 요소 찾기
        var asmtcardDtl = cardBody.querySelector(".asmtcardDtl");
        console.log(qstCodeValue);
        console.log(asmtcardDtl);
        if (qstCodeValue === "M") {
            // 객관식이라면
            var mStr = asmtcardDtlMStr();
            asmtcardDtl.innerHTML = mStr;

        } else {
            // 주관식이라면
            var sStr = asmtcardDtlSStr();
            asmtcardDtl.innerHTML = sStr;
        }
    });

    function asmtcardDtlSStr(){
        let sStr = ""
        sStr += `<div class="row align-items-center">`;
        sStr += `    <div class="col-1">답</div>`;
        sStr += `    <div class="col-9"><input type="text" class="form-control font-weight-normal border-0 rounded-0 shadow-none border-bottom border-dark qstnAns" placeholder="답"></div>`;
        sStr += `    <div class="col-2"></div>`;
        sStr += `</div>`;
        return sStr;
    }

    function asmtcardDtlMStr(){
        let mStr = ""
        mStr += `<div class="form-check mb-2">`;
        mStr += `    <input class="form-check-input" type="radio" name="qstDtlOptions\${imgiconNum}" value="1">`;
        mStr += `    <input type="text" class="form-control font-weight-normal qstDtlCn" placeholder="답안1">`;
        mStr += `</div>`;
        mStr += `<div class="form-check mb-2">`;
        mStr += `    <input class="form-check-input" type="radio" name="qstDtlOptions\${imgiconNum}" value="2">`;
        mStr += `    <input type="text" class="form-control font-weight-normal qstDtlCn" placeholder="답안2">`;
        mStr += `</div>`;
        mStr += `<div class="form-check mb-2">`;
        mStr += `    <input class="form-check-input" type="radio" name="qstDtlOptions\${imgiconNum}" value="3">`;
        mStr += `    <input type="text" class="form-control font-weight-normal qstDtlCn" placeholder="답안3">`;
        mStr += `</div>`;
        mStr += `<div class="form-check mb-2">`;
        mStr += `    <input class="form-check-input" type="radio" name="qstDtlOptions\${imgiconNum}" value="4">`;
        mStr += `    <input type="text" class="form-control font-weight-normal qstDtlCn" placeholder="답안4">`;
        mStr += `</div>`;
        mStr += `<div class="form-check">`;
        mStr += `    <input class="form-check-input" type="radio" name="qstDtlOptions\${imgiconNum}" value="5">`;
        mStr += `    <input type="text" class="form-control font-weight-normal qstDtlCn" placeholder="답안5">`;
        mStr += `</div>`;
        return mStr;
    }

    function cardStr(){
        let cardStr = ""
        cardStr += `<div class="card qstCard">`;
        cardStr += `    <div class="card-body collapse show">`;
        cardStr += `        <div class="row mb-4">`;
        cardStr += `            <div class="col-2">`;
        cardStr += `                <select class="form-select mr-sm-2 qstCode">`;
        cardStr += `                    <option selected value="M">객관식</option>`;
        cardStr += `                    <option value="S">주관식</option>`;
        cardStr += `                </select>`;
        cardStr += `            </div>`;
        cardStr += `            <div class="col-8"></div>`;
        cardStr += `            <div class="col-2 text-end">`;
        cardStr += `                <i data-feather="copy" class="feather-icon copyBtn"></i>`;
        cardStr += `                &nbsp;&nbsp;`;
        cardStr += `                <i data-feather="trash-2" class="feather-icon deleteBtn"></i>`;
        cardStr += `            </div>`;
        cardStr += `        </div>`;
        cardStr += `        <div class="asmt">`;
        cardStr += `            <div class="row mb-3 qstTitle">`;
        cardStr += `                <div class="col-10"><input type="text" class="form-control font-weight-normal qstCn" placeholder="문제"></div>`;
        cardStr += `                <div class="col-2 text-end">`;
        cardStr += `                    <label for="imgicon\${imgiconNum}"><i data-feather="image" class="feather-icon"></i></label>`;
        cardStr += `                    <input type="file"a class="file-upload" multiple id="imgicon\${imgiconNum}" style = "display : none" onchange="readURL(this);" >`;
        cardStr += `                </div>`;
        cardStr += `            </div>`;
        cardStr += `            <div class="asmttitleimg mb-3"></div>`;
        cardStr += `        </div>`;
        cardStr += `        <div class="asmtcardDtl">`;
        cardStr +=  asmtcardDtlMStr()
        cardStr += `        </div>`;
        cardStr += `    </div>`;
        cardStr += `</div>`;
        return cardStr;
    }

    // 플러스 버튼을 클릭할 때
    $(document).on("click", "#plusBtn", function(e) {
        imgiconNum ++;
        var cardHTML = cardStr(); // cardStr() 함수에서 생성한 문자열로 된 HTML을 변수에 저장
        var tempContainer = document.createElement('div'); // 임시 컨테이너 역할을 할 빈 div 요소 생성
        tempContainer.innerHTML = cardHTML; // HTML 문자열을 div 요소의 innerHTML로 설정하여 노드 객체로 변환
        var newCardContainer = tempContainer.firstChild; // 첫 번째 자식 노드를 가져와 새로운 카드 컨테이너로 사용
        var newCard = newCardContainer.firstChild; // 첫 번째 자식 노드를 가져와 새로운 카드로 사용
        asmtContainer.appendChild(newCardContainer); // 새로운 카드 컨테이너를 추가
        feather.replace();
    })

    // 완료 버튼을 눌렀을 때
    let formData = new FormData();  // 무조건 multipart/form-data
    $(document).on("click", "#submitBtn", function(e){

        var cardBody = this.closest(".card-body"); // 상위 요소 찾기
        var qstList = [];

        let asmtTtl =document.querySelector("#asmtTtl").value
        let asmtExpln =document.querySelector("#asmtExpln").value.trim();
        if(!asmtTtl){
            Swal.fire('제목을 입력해주세요!');
            return false;
        }

        // 각 card의 정보를 수집하여 List에 추가
        formData.append("asmtTtl", asmtTtl);
        formData.append("asmtExpln", asmtExpln);
        formData.append("asmtDdln", document.querySelector("#asmtDdln").value.replace('T', ' '));
        formData.append("sbjctCd", sbjctCd);

        var cards = document.querySelectorAll("#asmtContainer .qstCard");

        for(var cardIndex = 0; cardIndex < cards.length; cardIndex++){

            var card = cards[cardIndex];


            // 문제내용
            var qstCn = card.querySelector(".qstCn");
            // 문제 이미지
            var atchFileNo
            // 문제유형
            let qstCode = card.querySelector(".qstCode");

            // 세부문제
            var qstDtlNo;
            var qstDtlCn;

            formData.append("qstList["+cardIndex+"].qstCn",qstCn.value);
            formData.append("qstList["+cardIndex+"].qstCode",qstCode.value);

            var dtlResult = qstDtlListAndQstAns(qstCode.value, card, cardIndex);
            if (dtlResult == false){
                Swal.fire((cardIndex + 1 )+ '번 객관식 문제의 답안을 확인 해 보세요!');
                return false;
            }


            var qstImgs = card.querySelectorAll(".qstTitle input[type=file]");
            if(qstImgs.length > 0){
                for(var z = 0; z < qstImgs.length; z++){
                // qstImgs.forEach(function(qstImg) {
                    var files = qstImgs[z].files[0];
                    if(typeof files == "undefined"){
                        files = null;
                    }else{
                        formData.append("qstList["+cardIndex+"].fileList["+z+"]", files);
                    }
                };
            }
        } // cardList 생성 끝
        console.log("formData:",formData)


        $.ajax({
            url: '/tch/class/asmt',
            method: 'post',
            data: formData,
            dataType: 'text',
            processData: false,
            contentType: false,
            beforeSend: function(xhr) {
                    xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
            },
            success: function(res) {
                console.log(res)
                location.href = "/tch/class/asmt?sbjctCd=" + res;
            },
            error: function(xhr, status, error) {
                // 요청이 실패했을 때 처리할 코드 작성
                alert("제발");
            }
		});
    })

    // 카드안에 있는 객관식 리스트를 가져오기
    function qstDtlListAndQstAns(qstCode, card, cardIndex){
        let result = {};
        let qstDtlListResult = [];
        let qstAns = "";
        if(qstCode == "M"){
            // 객관식
            if(!card.querySelector('input[type=radio]:checked')){
                return false;
            }
            qstAns =card.querySelector('input[type=radio]:checked').value;
            var qstDtlOptions = card.querySelectorAll('input[type="radio"]');
            var qstDtlCnInput = card.querySelectorAll('.qstDtlCn');
            console.log("qstAns",qstAns);
            for (var i = 0; i < qstDtlOptions.length; i++) {
                var qstDtlNo = qstDtlOptions[i];
                var qstDtlCn = qstDtlCnInput[i].value.trim();
                if(!qstDtlCn){
                    return false;
                }
                formData.append("qstList["+cardIndex+"].qstDtlList["+i+"].qstDtlNo",qstDtlNo.value);
                formData.append("qstList["+cardIndex+"].qstDtlList["+i+"].qstDtlCn",qstDtlCn);
                // console.log("qstDtl",qstDtl);
            }
        } else {
            // 주관식
            qstAns = card.querySelector(".qstnAns");

        }
        formData.append("qstList["+cardIndex+"].qstAns",qstAns);
    }


    // 복사 아이콘을 눌렀을 때
    $(document).on("click", ".copyBtn", function(e) {
        var card = this.closest(".qstCard");
        var newCard = card.cloneNode(true); // 클릭한 카드의 html 가져오기
        var parentElement = card.parentElement; // 클릭한 복사 버튼이 속한 카드를 감싸는 부모 요소를 가져옵니다.

        parentElement.insertBefore(newCard, card.nextElementSibling); // 새로운 카드 HTML을 클릭한 복사 버튼 바로 다음에 추가합니다.
        feather.replace();
    })

    // 삭제 아이콘을 눌렀을 때
    $(document).on("click", ".deleteBtn", function(e) {
        var card = this.closest(".qstCard");
        card.remove();
        feather.replace();
    })
</script>